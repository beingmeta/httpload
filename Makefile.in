# Makefile for httpload

prefix		= @prefix@
exec_prefix	= @exec_prefix@
datarootdir	= @datarootdir@
datadir		= @datadir@
BINDIR 		= @prefix@/bin
MANDIR 		= @mandir@/man1
CC 		= gcc -Wall
CFLAGS	 	= -O  @CFLAGS@
LDFLAGS 	= @LDFLAGS@ @LIBS@
DESTDIR		=
#LDFLAGS 	= -g $(SSL_LIBS) $(SYSV_LIBS)

all:		httpload

httpload:	httpload.o timers.o
	$(CC) $(CFLAGS) httpload.o timers.o $(LDFLAGS) -o httpload

httpload.o:	httpload.c timers.h port.h
	$(CC) $(CFLAGS) -c httpload.c

timers.o:	timers.c timers.h
	$(CC) $(CFLAGS) -c timers.c

install:	all
	etc/install-sh httpload $(DESTDIR)$(BINDIR)
install-man:
	etc/install-sh debian/httpload.1 $(DESTDIR)$(MANDIR)
install-all: install install-man

clean:
	rm -f httpload *.o core core.* *.core
distclean:
	rm -f config.h config.status config.log Makefile

httpload.debian: staging/httpload_@VERSION@ staging/httpload_@VERSION@.orig.tar.gz
	(cd staging/httpload-@VERSION@; \
	  dpkg-buildpackage -k $(GPGID:-default) -rfakeroot) && \
	(cd staging; \
	   mv httpload_@VERSION@*.deb httpload_@VERSION@*.dsc ../packages; \
	   mv httpload_@VERSION@*.gz httpload_@VERSION@*.changes ../packages;) && \
	touch httpload.debian
debian deb: httpload.debian
freshdeb:
	rm -rf staging httpload.debian
	make httpload.debian

staging:
	if test ! -d staging; then mkdir staging; fi
staging/httpload_@VERSION@ staging/httpload_@VERSION@.orig.tar.gz: staging
	git archive --prefix=httpload-@VERSION@/ \
	            -o staging/httpload_@VERSION@.orig.tar HEAD
	cd staging; tar -xf httpload_@VERSION@.orig.tar; \
		gzip httpload_@VERSION@.orig.tar

tar:
	@name=`sed -n -e '/define VERSION /!d' -e 's,.*http_load ,http_load-,' -e 's,",,p' version.h` ; \
	  rm -rf $$name ; \
	  mkdir $$name ; \
	  tar cf - `cat FILES` | ( cd $$name ; tar xfBp - ) ; \
	  chmod 644 $$name/Makefile ; \
	  tar cf $$name.tar $$name ; \
	  rm -rf $$name ; \
	  gzip $$name.tar
